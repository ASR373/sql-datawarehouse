-- find total customers by countries
select
    country,
    count(customer_key) as total_customers
from gold.dim_customers
group by country
order by total_customers desc;

-- find total customers by gender
select
    gender,
    count(customer_key) as total_customers
from gold.dim_customers
group by gender
order by total_customers desc;

-- find total products by category
select
    category,
    count(product_key) as total_products
from gold.dim_products
group by category
order by total_products desc;

-- what is the average cost in each category?
select
    category,
    avg(cost) as avg_cost
from gold.dim_products
group by category
order by avg_cost desc;

-- what is the total revenue generated for each category?
select
    p.category,
    sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_products p
    on p.product_key = f.product_key
group by p.category
order by total_revenue desc;

-- what is the total revenue generated by each customer?
select
    c.customer_key,
    c.firstname,
    c.lastname,
    sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_customers c
    on c.customer_key = f.customer_key
group by 
    c.customer_key,
    c.firstname,
    c.lastname
order by total_revenue desc;

-- what is the distribution of sold items across countries?
select
    c.country,
    sum(f.quantity) as total_sold_items
from gold.fact_sales f
left join gold.dim_customers c
    on c.customer_key = f.customer_key
group by c.country
order by total_sold_items desc;

------------------------------------------------------------------------

-- which 5 products generating the highest revenue?
-- simple ranking
select
    p.product_name,
    sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_products p
    on p.product_key = f.product_key
group by p.product_name
order by total_revenue desc
limit 5;

-- complex but flexibly ranking using window functions
select *
from (
    select
        p.product_name,
        sum(f.sales_amount) as total_revenue,
        rank() over (order by sum(f.sales_amount) desc) as rank_products
    from gold.fact_sales f
    left join gold.dim_products p
        on p.product_key = f.product_key
    group by p.product_name
) as ranked_products
where rank_products <= 5;

-- what are the 5 worst-performing products in terms of sales?
select
    p.product_name,
    sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_products p
    on p.product_key = f.product_key
group by p.product_name
order by total_revenue
limit 5;

-- find the top 10 customers who have generated the highest revenue
select
    c.customer_key,
    c.firstname,
    c.lastname,
    sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_customers c
    on c.customer_key = f.customer_key
group by 
    c.customer_key,
    c.firstname,
    c.lastname
order by total_revenue desc
limit 10;

-- the 3 customers with the fewest orders placed
select
    c.customer_key,
    c.firstname,
    c.lastname,
    count(distinct order_number) as total_orders
from gold.fact_sales f
left join gold.dim_customers c
    on c.customer_key = f.customer_key
group by 
    c.customer_key,
    c.firstname,
    c.lastname
order by total_orders
limit 3;

